#dockercompose version speceification
version: '3.8'

services:
#service register.
  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - movie-kafka-network

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - movie-kafka-network

  movie-processor:
    image:  movie-kafka/movie-processor:1.0-${QUARKUS_MODE:-jvm}
    build:
      context: movie-processor
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    depends_on:
      - kafka
      - movie-db
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    networks:
      - movie-kafka-network

  comment-processor:
    image: movie-kafka/comment-processor:1.0-${QUARKUS_MODE:-jvm}
    build:
      context: comment-processor
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "9090:9090"
    networks:
      - movie-kafka-network

  movie-db:
    container_name: movie_db
    image: postgres:latest
    environment:
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "1"
      POSTGRES_DB: "test"
    ports:
      - "5432:5432"
    networks:
      - movie-kafka-network

networks:
  movie-kafka-network:
    name: moviekafka
